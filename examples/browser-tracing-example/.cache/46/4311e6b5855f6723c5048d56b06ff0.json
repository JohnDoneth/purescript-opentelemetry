{"id":"node_modules/@opentelemetry/api-metrics/build/esm/api/global-utils.js","dependencies":[{"name":"C:\\Users\\John\\projects\\purescript-opentelemetry\\examples\\browser-tracing-example\\node_modules\\@opentelemetry\\api-metrics\\build\\esm\\api\\global-utils.js.map","includedInParent":true,"mtime":1635985407191},{"name":"C:\\Users\\John\\projects\\purescript-opentelemetry\\examples\\browser-tracing-example\\package.json","includedInParent":true,"mtime":1635986433737},{"name":"C:\\Users\\John\\projects\\purescript-opentelemetry\\examples\\browser-tracing-example\\node_modules\\@opentelemetry\\api-metrics\\package.json","includedInParent":true,"mtime":1635985407184},{"name":"../platform","loc":{"line":16,"column":28},"parent":"C:\\Users\\John\\projects\\purescript-opentelemetry\\examples\\browser-tracing-example\\node_modules\\@opentelemetry\\api-metrics\\build\\esm\\api\\global-utils.js","resolved":"C:\\Users\\John\\projects\\purescript-opentelemetry\\examples\\browser-tracing-example\\node_modules\\@opentelemetry\\api-metrics\\build\\esm\\platform\\browser\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._global = exports.GLOBAL_METRICS_API_KEY = exports.API_BACKWARDS_COMPATIBILITY_VERSION = void 0;\nexports.makeGetter = makeGetter;\n\nvar _platform = require(\"../platform\");\n\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar GLOBAL_METRICS_API_KEY = Symbol.for('io.opentelemetry.js.api.metrics');\nexports.GLOBAL_METRICS_API_KEY = GLOBAL_METRICS_API_KEY;\nvar _global = _platform._globalThis;\n/**\n * Make a function which accepts a version integer and returns the instance of an API if the version\n * is compatible, or a fallback version (usually NOOP) if it is not.\n *\n * @param requiredVersion Backwards compatibility version which is required to return the instance\n * @param instance Instance which should be returned if the required version is compatible\n * @param fallback Fallback instance, usually NOOP, which will be returned if the required version is not compatible\n */\n\nexports._global = _global;\n\nfunction makeGetter(requiredVersion, instance, fallback) {\n  return function (version) {\n    return version === requiredVersion ? instance : fallback;\n  };\n}\n/**\n * A number which should be incremented each time a backwards incompatible\n * change is made to the API. This number is used when an API package\n * attempts to access the global API to ensure it is getting a compatible\n * version. If the global API is not compatible with the API package\n * attempting to get it, a NOOP API implementation will be returned.\n */\n\n\nvar API_BACKWARDS_COMPATIBILITY_VERSION = 3;\nexports.API_BACKWARDS_COMPATIBILITY_VERSION = API_BACKWARDS_COMPATIBILITY_VERSION;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":20,"column":7},"generated":{"line":26,"column":0}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":26,"column":4}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":20,"column":35},"generated":{"line":26,"column":26}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":20,"column":38},"generated":{"line":26,"column":29}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":20,"column":44},"generated":{"line":26,"column":35}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":20,"column":45},"generated":{"line":26,"column":36}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":20,"column":38},"generated":{"line":26,"column":39}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":26,"column":40}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":20,"column":38},"generated":{"line":26,"column":73}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":20,"column":7},"generated":{"line":26,"column":74}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":29,"column":7},"generated":{"line":28,"column":0}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":29,"column":13},"generated":{"line":28,"column":4}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":29,"column":20},"generated":{"line":28,"column":11}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":29,"column":23},"generated":{"line":28,"column":14}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":29,"column":7},"generated":{"line":28,"column":35}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":40,"column":0}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":39,"column":16},"generated":{"line":40,"column":9}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":40,"column":19}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":40,"column":2},"generated":{"line":40,"column":20}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":40,"column":35}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":41,"column":2},"generated":{"line":40,"column":37}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":40,"column":45}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":40,"column":47}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":40,"column":55}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":42,"column":13},"generated":{"line":40,"column":57}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":41,"column":0}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":44,"column":9},"generated":{"line":41,"column":9}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":44,"column":10},"generated":{"line":41,"column":19}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":44,"column":9},"generated":{"line":41,"column":26}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":44,"column":25},"generated":{"line":41,"column":28}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":45,"column":4},"generated":{"line":42,"column":0}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":45,"column":4},"generated":{"line":42,"column":11}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":45,"column":11},"generated":{"line":42,"column":18}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":45,"column":16},"generated":{"line":42,"column":23}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":45,"column":4},"generated":{"line":42,"column":38}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":45,"column":34},"generated":{"line":42,"column":41}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":45,"column":4},"generated":{"line":42,"column":49}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":45,"column":45},"generated":{"line":42,"column":52}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":45,"column":4},"generated":{"line":42,"column":60}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":45,"column":53},"generated":{"line":43,"column":0}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":43,"column":3}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":46,"column":1},"generated":{"line":44,"column":0}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":55,"column":7},"generated":{"line":54,"column":0}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":55,"column":13},"generated":{"line":54,"column":4}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":55,"column":48},"generated":{"line":54,"column":39}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":55,"column":51},"generated":{"line":54,"column":42}},{"source":"../../../src/api/global-utils.ts","name":null,"original":{"line":55,"column":7},"generated":{"line":54,"column":43}}],"sources":{"../../../src/api/global-utils.ts":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MeterProvider } from '../types/MeterProvider';\nimport { _globalThis } from '../platform';\n\nexport const GLOBAL_METRICS_API_KEY = Symbol.for(\n  'io.opentelemetry.js.api.metrics'\n);\n\ntype Get<T> = (version: number) => T;\ntype OtelGlobal = Partial<{\n  [GLOBAL_METRICS_API_KEY]: Get<MeterProvider>;\n}>;\n\nexport const _global = _globalThis as OtelGlobal;\n\n/**\n * Make a function which accepts a version integer and returns the instance of an API if the version\n * is compatible, or a fallback version (usually NOOP) if it is not.\n *\n * @param requiredVersion Backwards compatibility version which is required to return the instance\n * @param instance Instance which should be returned if the required version is compatible\n * @param fallback Fallback instance, usually NOOP, which will be returned if the required version is not compatible\n */\nexport function makeGetter<T>(\n  requiredVersion: number,\n  instance: T,\n  fallback: T\n): Get<T> {\n  return (version: number): T =>\n    version === requiredVersion ? instance : fallback;\n}\n\n/**\n * A number which should be incremented each time a backwards incompatible\n * change is made to the API. This number is used when an API package\n * attempts to access the global API to ensure it is getting a compatible\n * version. If the global API is not compatible with the API package\n * attempting to get it, a NOOP API implementation will be returned.\n */\nexport const API_BACKWARDS_COMPATIBILITY_VERSION = 3;\n"},"lineCount":null}},"error":null,"hash":"d7cd3302e5a5bc77e5463066341e6d85","cacheData":{"env":{}}}